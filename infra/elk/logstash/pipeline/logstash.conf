input {
  beats {
    port => 5044
  }
}

filter {
  ##########################
  # FASTAPI / APP JSON LOGS
  ##########################
  if [fields][log_type] == "app" {
    json {
      source => "message"
      skip_on_invalid_json => true
    }

    if [log.logger] =~ /^celery\./ {
      mutate {
        add_tag => ["celery"]
      }

      grok {
        match => {
          "message" => [
            # Пример: Task some.path.to.task[uuid] received
            "Task %{DATA:celery_task_name}\[%{UUID:celery_task_id}\] (?<celery_task_status>received|succeeded|failed)(?: in %{NUMBER:celery_duration:float}s)?"
          ]
        }
      }
    }

    else {
        mutate {
          add_tag => ["app"]
          add_field => {
            "app" => "job_scope"
            "env" => "%{[fields][env]}"
          }
        }
    }


    if [asctime] {
      date {
        match => ["asctime", "dd-MM-yyyy HH:mm:ss", "ISO8601"]
        target => "@timestamp"
      }
    }

    if [error.stack_trace] {
      ruby {
        code => '
          stack = event.get("error.stack_trace")
          if stack
            trimmed = stack[-4000..-1] || stack  # если вдруг короче
            event.set("short_stack_trace", trimmed)
          end
        '
      }
  }

  }

  ##################
  # NGINX LOGS
  ##################
  else if [fields][log_type] == "nginx" {
    grok {
      match => {
        "message" => '%{IP:client_ip} - - \[%{HTTPDATE:timestamp}\] "(?:%{WORD:method} %{URIPATHPARAM:request}(?: HTTP/%{NUMBER:http_version})?)" %{NUMBER:response} (?:%{NUMBER:bytes}|-) "(?:%{URI:referrer}|-)" "%{DATA:user_agent}"'
      }
    }

    date {
      match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
      target => "@timestamp"
    }

    mutate {
      add_tag => ["nginx"]
      add_field => {
        "app" => "nginx"
        "env" => "%{[fields][env]}"
        "log.level" => "%{[fields][log_level]}"
      }
    }
  }

  ##################
  # POSTGRESQL LOGS
  ##################
  else if [fields][log_type] == "postgresql" {
    mutate {
      add_tag => ["postgresql"]
      add_field => {
        "app" => "postgresql"
        "env" => "%{[fields][env]}"
      }
    }
    # Если позже потребуется парсинг — можно добавить grok + date
  }

  #######################
  # PARSE FAILURES (JSON)
  #######################
  if "_jsonparsefailure" in [tags] {
    mutate {
      add_tag => ["json_error"]
    }
  }
}

output {
  ######################
  # ERRORS (malformed JSON)
  ######################
   if [levelname] == "ERROR" or [log.level] == "error" or [log.level] == 'ERROR' {
    http {
      url => "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage"
      http_method => "post"
      format => "json"
      content_type => "application/json"
      mapping => {
        "chat_id" => "${TELEGRAM_CHAT_ID}"
        "parse_mode" => "MarkdownV2"
        "text" => "*\[%{[fields][env]}\]* \[`%{app}`\] *ERROR message:*```%{message}```*Stack trace:*```%{short_stack_trace}```"
      }
    }
  }

  if "json_error" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "log-errors-%{+YYYY.MM.dd}"
    }
  }

  ######################
  # APP LOGS
  ######################
  else if "app" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "fastapi-logs-%{+YYYY.MM.dd}"
    }
  }

  else if "celery" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "celery-logs-%{+YYYY.MM.dd}"
    }
  }

  ######################
  # NGINX LOGS
  ######################
  else if "nginx" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "nginx-logs-%{+YYYY.MM.dd}"
    }
  }

  ######################
  # POSTGRESQL LOGS
  ######################
  else if "postgresql" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "postgresql-logs-%{+YYYY.MM.dd}"
    }
  }

  ######################
  # DEFAULT CATCH-ALL
  ######################
  else {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "unknown-logs-%{+YYYY.MM.dd}"
    }
  }

#     stdout { codec => rubydebug }
}
