"""updated_at to vacancy

Revision ID: f24468d6f7ad
Revises: 4e9be30074df
Create Date: 2025-03-27 12:33:58.720425

"""
import datetime
from typing import Sequence, Union
from zoneinfo import ZoneInfo

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'f24468d6f7ad'
down_revision: Union[str, None] = '4e9be30074df'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "vacancies",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True)
    )

    # Шаг 2 — установить временное значение для всех старых записей
    vacancies = sa.table("vacancies", sa.column("updated_at", sa.DateTime(timezone=True)))
    op.execute(
        vacancies.update().values(updated_at=datetime.datetime.now(ZoneInfo("Europe/Moscow")))
    )

    # Шаг 3 — сделать колонку обязательной
    op.alter_column("vacancies", "updated_at", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('vacancies', 'updated_at')
    # ### end Alembic commands ###
